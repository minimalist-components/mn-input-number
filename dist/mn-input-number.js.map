{"version":3,"sources":["scripts/mn-input-number.component.js"],"names":["mnInput","setInputAttribute","attribute","isDefaultAttribute","hasOwnProperty","attributeValue","element","getAttribute","name","isValidValue","values","indexOf","value","default","input","setAttribute","this","inputAttributes","document","createElement","map","appendChild","placeholder","label","textContent","prototype","Object","create","HTMLElement","createdCallback","registerElement"],"mappings":"AAAA,YAMA,SAASA,WA4DP,QAASC,mBAAkBC,WACzB,GAAIC,oBAAqBD,UAAUE,eAAe,WAC9CC,eAAiBC,QAAQC,aAAaL,UAAUM,KAEpD,IAAIL,mBAAoB,CACtB,GAAIM,cAAeP,UAAUE,eAAe,WACvCF,UAAUQ,OAAOC,QAAQN,iBAAmB,EAE7CO,MAAQH,aACRJ,eACAH,UAAUW,OAEdC,OAAMC,aAAab,UAAUM,KAAMI,WAC1BP,iBACTS,MAAMC,aAAab,UAAUM,KAAMH,gBAzEvC,GAAIC,SAAUU,KAEVC,kBAEAT,KAAM,OACNK,QAAS,WAGTL,KAAM,cACNK,QAAS,cAGTL,KAAM,UAGNA,KAAM,SAGNA,KAAM,eACNK,QAAS,QAGTL,KAAM,cAGNA,KAAM,YAGNA,KAAM,aAGNA,KAAM,aAGNA,KAAM,aAGNA,KAAM,QAGNA,KAAM,QAKNM,MAAQI,SAASC,cAAc,QACnCF,iBAAgBG,IAAInB,mBACpBK,QAAQe,YAAYP,MAGpB,IAAIQ,aAAchB,QAAQC,aAAa,cACvC,IAAIe,YAAa,CACf,GAAIC,OAAQL,SAASC,cAAc,QACnCI,OAAMC,YAAclB,QAAQC,aAAa,YAClCe,YADa,YAEhBA,YACJhB,QAAQe,YAAYE,QA7DxB,GAAIE,WAAYC,OAAOC,OAAOC,YAAYH,UAC1CA,WAAUI,gBAAkB7B,QAC5BkB,SAASY,gBAAgB,mBAAoBL,UAAAA","file":"mn-input-number.js","sourcesContent":["'use strict';\n\nlet prototype = Object.create(HTMLElement.prototype);\nprototype.createdCallback = mnInput;\ndocument.registerElement('mn-input-number', {prototype});\n\nfunction mnInput() {\n  let element = this;\n\n  let inputAttributes = [\n    {\n      name: 'type',\n      default: 'number',\n    },\n    {\n      name: 'placeholder',\n      default: 'undefined',\n    },\n    {\n      name: 'value',\n    },\n    {\n      name: 'name',\n    },\n    {\n      name: 'autocomplete',\n      default: 'off',\n    },\n    {\n      name: 'autofocus',\n    },\n    {\n      name: 'pattern',\n    },\n    {\n      name: 'readonly',\n    },\n    {\n      name: 'required',\n    },\n    {\n      name: 'disabled',\n    },\n    {\n      name: 'max',\n    },\n    {\n      name: 'min',\n    },\n  ];\n\n  // input element\n  let input = document.createElement('input');\n  inputAttributes.map(setInputAttribute);\n  element.appendChild(input);\n\n  // label element\n  let placeholder = element.getAttribute('placeholder');\n  if (placeholder) {\n    let label = document.createElement('label');\n    label.textContent = element.getAttribute('disabled')\n      ? `${placeholder} disabled`\n      : placeholder;\n    element.appendChild(label);\n  }\n\n  function setInputAttribute(attribute) {\n    let isDefaultAttribute = attribute.hasOwnProperty('default');\n    let attributeValue = element.getAttribute(attribute.name);\n\n    if (isDefaultAttribute) {\n      let isValidValue = attribute.hasOwnProperty('values')\n        && attribute.values.indexOf(attributeValue) >= 0;\n\n      let value = isValidValue\n        ? attributeValue\n        : attribute.default;\n\n      input.setAttribute(attribute.name, value);\n    } else if (attributeValue) {\n      input.setAttribute(attribute.name, attributeValue);\n    }\n  }\n}\n"],"sourceRoot":"/source/"}