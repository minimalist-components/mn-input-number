{"version":3,"sources":["scripts/mn-number.class.js"],"names":["MnNumber","self","nameAndValue","attr","name","value","implemented","defaultAttr","attributes","some","setAttribute","attribute","filter","input","_this","_ret","_classCallCheck","this","instance","querySelector","Array","from","map","forEach","maskType","getAttribute","precision","isNaN","Number","mask","document","createElement","classList","add","appendChild","toFixed","replace","addEventListener","length","remove","event","preventDefault","clipboardData","getData","number","parseInt","_possibleConstructorReturn","window","MnInput","customElements","define"],"mappings":"yyBAAMA,UAAAA,SAAAA,iBACJ,QAAAA,UAAYC,MAuGV,QAASC,cAAaC,MAIpB,OAAQC,KAHKD,KAAKC,KAGJC,MAFAF,KAAKE,OAKrB,QAASC,aAAYC,aACnB,MAAOC,YAAWC,KAAK,SAAAN,MAAA,MAAQA,MAAKC,OAASG,YAAYH,OAG3D,QAASM,cAAaC,WACpB,GAAMN,OAAQG,WAAWI,OAAO,SAAAT,MAAA,MAAQA,MAAKC,OAASO,UAAUP,OAAM,GAAGC,KACzEQ,OAAMH,aAAaC,UAAUP,KAAMC,OApHrB,GAAAS,OAAAC,IAAAC,iBAAAC,KAAAjB,UAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,SAAAA,WAAAA,OAAAA,eAAAA,WAAAA,KAAAA,KAAaA,MACb,IAAMiB,UAAAA,MACAL,MAAQC,MAAKK,cAAc,QACjCN,OAAMH,aAAa,OAAQ,SAE3B,IAAMF,YAAaY,MAChBC,KAAKP,MAAKN,YACVc,IAAIpB,gBAIHE,KAAM,QAGNA,KAAM,QAGNA,KAAM,SAKPQ,OAAON,aACPiB,QAAQb,aAEX,IAAMc,UAAWV,MAAKW,aAAa,YAC9BX,MAAKW,aAAa,eAClBX,MAAKW,aAAa,WAYvB,OAVAD,UAYA,WACE,GAAME,WAAaC,MAAMH,UAErB,EADAI,OAAOJ,UAGLK,KAAOC,SAASC,cAAc,MAIpC,IAHAF,KAAKG,UAAUC,IAAI,QACnBf,SAASgB,YAAYL,MAEjBX,SAASb,MAAO,CAClB,GAAMA,OAAQuB,OAAOV,SAASb,OAAO8B,QAAQT,UAC7CR,UAASb,MAAQA,MACjBwB,KAAKnB,aAAa,QAASG,MAAMR,MAAM+B,QAAQ,IAAK,MACpDlB,SAASc,UAAUC,IAAI,aAGzBpB,MAAMwB,iBAAiB,UAAW,WAChCR,KAAKnB,aAAa,QAASG,MAAMR,MAAM+B,QAAQ,IAAK,QAGtDvB,MAAMwB,iBAAiB,QAAS,WAC9BR,KAAKnB,aAAa,QAASG,MAAMR,MAAM+B,QAAQ,IAAK,MAEhDvB,MAAMR,MAAMiC,OACdpB,SAASc,UAAUC,IAAI,aAEvBf,SAASc,UAAUO,OAAO,eAI9B1B,MAAMwB,iBAAiB,SAAU,WAC/B,GAAInB,SAASb,MAAO,CAClB,GAAMA,QAAQuB,OAAOV,SAASb,OAAO8B,QAAQT,UAC7CR,UAASb,MAAQ,EACjBa,SAASb,MAAQA,OACjBwB,KAAKnB,aAAa,QAASG,MAAMR,MAAM+B,QAAQ,IAAK,MACpDlB,SAASR,aAAa,QAASL,cAKrC,WACEQ,MAAMwB,iBAAiB,QAAS,SAAAG,OAC9BA,MAAMC,gBACN,IAAMpC,OAAQmC,MAAME,cAAcC,QAAQ,QACpCC,OAASC,SAASxC,MACnBsB,OAAMiB,UACT1B,SAASb,MAAQuC,UAIrB/B,MAAMwB,iBAAiB,SAAU,WAC/B,GAAMhC,OAAQwC,SAAShC,MAAMR,QACVsB,MAAMtB,SAGvBa,SAASb,MAAQA,YAhEvBQ,MAAMwB,iBAAiB,OAAQ,WACxBxB,MAAMR,QACTQ,MAAMR,MAAQ,MAIlBU,KAAOd,KAAP6C,2BAAAhC,MAAAC,2DAzCmBgC,OAAOC,QA0H9BD,QAAOE,eAAeC,OAAO,YAAalD","file":"mn-number.js","sourcesContent":["class MnNumber extends window.MnInput {\n  constructor(self) {\n    self = super(self)\n    const instance = this\n    const input = this.querySelector('input')\n    input.setAttribute('type', 'number')\n\n    const attributes = Array\n      .from(this.attributes)\n      .map(nameAndValue)\n\n    const attributeSpecs = [\n      {\n        name: 'max',\n      },\n      {\n        name: 'min',\n      },\n      {\n        name: 'step',\n      },\n    ]\n\n    attributeSpecs\n      .filter(implemented)\n      .forEach(setAttribute)\n\n    const maskType = this.getAttribute('decimal')\n      || this.getAttribute('percentage')\n      || this.getAttribute('currency')\n\n    maskType\n      ? setMaskEvents()\n      : setIntegerEvents()\n\n    input.addEventListener('blur', () => {\n      if (!input.value) {\n        input.value = ''\n      }\n    })\n\n    return self\n\n    function setMaskEvents() {\n      const precision = !isNaN(maskType)\n        ? Number(maskType)\n        : 2\n\n      const mask = document.createElement('div')\n      mask.classList.add('mask')\n      instance.appendChild(mask)\n\n      if (instance.value) {\n        const value = Number(instance.value).toFixed(precision)\n        instance.value = value\n        mask.setAttribute('value', input.value.replace('.', ','))\n        instance.classList.add('has-value')\n      }\n\n      input.addEventListener('keydown', () => {\n        mask.setAttribute('value', input.value.replace('.', ','))\n      })\n\n      input.addEventListener('keyup', () => {\n        mask.setAttribute('value', input.value.replace('.', ','))\n\n        if (input.value.length) {\n          instance.classList.add('has-value')\n        } else {\n          instance.classList.remove('has-value')\n        }\n      })\n\n      input.addEventListener('change', () => {\n        if (instance.value) {\n          const value = Number(instance.value).toFixed(precision)\n          instance.value = 0\n          instance.value = value\n          mask.setAttribute('value', input.value.replace('.', ','))\n          instance.setAttribute('value', value)\n        }\n      })\n    }\n\n    function setIntegerEvents() {\n      input.addEventListener('paste', event => {\n        event.preventDefault()\n        const value = event.clipboardData.getData('Text')\n        const number = parseInt(value)\n        if (!isNaN(number)) {\n          instance.value = number\n        }\n      })\n\n      input.addEventListener('change', () => {\n        const value = parseInt(input.value)\n        const isANumber = !isNaN(value)\n\n        if (isANumber) {\n          instance.value = value\n        }\n      })\n    }\n\n    function nameAndValue(attr) {\n      const name = attr.name\n      const value = attr.value\n\n      return {name, value}\n    }\n\n    function implemented(defaultAttr) {\n      return attributes.some(attr => attr.name === defaultAttr.name)\n    }\n\n    function setAttribute(attribute) {\n      const value = attributes.filter(attr => attr.name === attribute.name)[0].value\n      input.setAttribute(attribute.name, value)\n    }\n  }\n}\n\nwindow.customElements.define('mn-number', MnNumber)\n"]}